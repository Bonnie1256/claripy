// This file determines how a TypeOp class defined
// Strings matching __[A-Z][A-Z0-9] will be replaced if they are:
// __BODY will be the replaced with the desired body of the file
// __ALIASES will be the replaced with with alias declarations for each class
// __OP will be replaced with the op in TypeOp (no namespace allowed)
// __UPPEROP will be replaced with the upper form of the op in TypeOp (no namespace allowed)
// __OPINCLUDE will be the replaced with the op header file

/**
 * @file
 * @brief The header file for all __OP Expression subclasses
 */

#ifndef __EXPRESSION_RAW_OP_AUTOGEN___UPPEROP_HPP__
#define __EXPRESSION_RAW_OP_AUTOGEN___UPPEROP_HPP__

#include "__OPINCLUDE"

#include "../../../../hash.hpp"
#include "../../../../macros.hpp"
#include "../../concrete.hpp"
#include "../../symbolic.hpp"
#include "../../type.hpp"

#include <type_traits>


namespace Expression {

    // Forward declarations
    namespace Private {
        template <typename, typename> class Cache;
    }

    namespace Raw::Op {

        /** Static verification of op */
        static_assert(std::is_base_of_v<Base, __OP>, "__OP is not a subclass of Op::Base");

        namespace AutoGen {

            __BODY

        }

    } // namespace Raw::Op

    __ALIASES

} // namespace Expression

#endif
