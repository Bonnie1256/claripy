// This file determines how a SymTypeOp class defined
// Strings matching __[A-Z][A-Z0-9] will be replaced if they are:
// __SUPER2 will be the second super of SymTypeOp (namespace relative to raw required)
// __TYPE will be replaced with the type in SymTypeOp (no namespace allowed)
// __SYM will be replaced with the sym in SymTypeOp (no namespace allowed)
// __OP will be replaced with the op in SymTypeOp (no namespace allowed)
// __CTORARGS will be replaced with the arguments that must be passed to the constructor


// Static verification of sym
static_assert(std::is_same_v<Symbolic, __SYM> || std::is_same_v<Concrete, __SYM>,
              "__SYM is neither Symbolic or Concrete");
/** Autogenerated: Instantiable __SYM__TYPE__OP expression */
struct __SYM__TYPE__OP : virtual public __TYPE__OP, virtual public __SUPER2 {
    EXPRESSION_RAW_INSTANTIABLE_INIT(__SYM__TYPE__OP)
  private:
    /** Disable public construction */
    __SYM__TYPE__OP(__CTORARGS);
};
