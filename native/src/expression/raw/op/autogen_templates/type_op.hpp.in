// This file determines how a TypeOp class defined
// Strings matching __[A-Z][A-Z0-9] will be replaced if they are:
// __SUPER1 will be the first super of TypeOp (namespace relative to raw required)
// __SUPER2 will be the second super of TypeOp (namespace relative to raw required)
// __TYPE will be replaced with the type in TypeOp (no namespace allowed)
// __OP will be replaced with the op in TypeOp (no namespace allowed)


// Static verification of sym
static_assert(std::is_base_of_v<Type::Base, Type::__TYPE>,
              "__TYPE is not a subclass of Type::Base");
/** Autogenerated: __TYPE__OP expression */
struct __TYPE__OP : virtual public __SUPER1, virtual public __SUPER2 {
    EXPRESSION_RAW_ABSTRACT_INIT_IMPLICIT_CTOR(__TYPE__OP)
};
